name: Release (PyPI & TestPyPI)

on:
  push:
    branches: ["main"]         # publish to TestPyPI on each push to main
    tags: ["v*.*.*"]           # publish to PyPI on semver tags like v0.1.0
  workflow_dispatch: {}        # allow manual runs

permissions:
  contents: read

jobs:
  test:
    name: CI (lint+test)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install -U pip
      - run: python -m pip install -e ".[dev]"
      - run: ruff check .
      - run: mypy src
      - run: pytest -q

  build:
    name: Build sdist+wheel
    needs: test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: python -m pip install -U build
      - id: meta
        name: Read package version
        run: |
          python - << 'PY'
          import re, pathlib, os
          text = pathlib.Path("src/eigenangi/_version.py").read_text()
          m = re.search(r'__version__\s*=\s*"([^"]+)"', text)
          v = m.group(1) if m else ""
          print(f"version={v}")
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh: fh.write(f"version={v}\n")
          PY
      - run: python -m build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-testpypi:
    name: Publish to TestPyPI
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/eigenangi
    permissions:
      id-token: write   # required for OIDC trusted publishing
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Publish distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true     # handy for re-pushes to main

  publish-pypi:
    name: Publish to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/eigenangi
    permissions:
      id-token: write   # required for OIDC trusted publishing
    steps:
      - name: Verify tag matches version
        run: |
          TAG="${GITHUB_REF_NAME#v}"
          echo "Tag: $TAG / Built: ${{ needs.build.outputs.version }}"
          test "$TAG" = "${{ needs.build.outputs.version }}"
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Publish distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
